variables:
   VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - test
  - build
  - release
  - notify

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'      

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  allow_failure: true
  script:
    - cd frontend
    - |
      sonar-scanner \
        -Dsonar.projectName=momo-store-frontend-std-15-39 \
        -Dsonar.projectKey=momo-store-frontend-std-15-39 \
        -Dsonar.sources=. \
        -Dsonar.host.url=${SONAR_URL} \
        -Dsonar.login=${SONAR_TOKEN} \
        -Dsonar.qualitygate.wait=true

build-frontend-artifact:
  stage: build
  needs:
    - sonarqube-frontend-sast
  before_script:
    - echo "Strating build"
  script:
    - cd frontend
    - npm ci --cache .npm --prefer-offline 
    - npm run build
    - mkdir momo-strore-front-${VERSION}
    - mv dist/ momo-strore-front-${VERSION}
    - tar czvf momo-strore-front-${VERSION}.tar.gz momo-strore-front-${VERSION}
    - |
      curl -v -u "${NEXUS_USER}:${NEXUS_PASS}" \
      --upload-file momo-strore-front-${VERSION}.tar.gz ${NEXUS_REPO_FRONT}/${VERSION}/momo-strore-front-${VERSION}.tar.gz 


build-frontend-container:
  stage: build
  image: docker:24.0.7-dind-rootless
  needs:
    - sonarqube-frontend-sast
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD gitlab.praktikum-services.ru:5050
    - docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASS
  script:
    - cd frontend
    - |
      docker build \
      --build-arg VERSION=$VERSION \
      --tag $CI_REGISTRY_IMAGE/momo-frontend:$VERSION \
      .
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:$VERSION

update-latest-image:
  stage: release
  when: manual
  image: docker:24.0.7-dind-rootless
  needs:
    - build-frontend-container
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD gitlab.praktikum-services.ru:5050
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-frontend:$VERSION
    - docker tag $CI_REGISTRY_IMAGE/momo-frontend:$VERSION $CI_REGISTRY_IMAGE/momo-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:latest

telegram-release-notification:
  stage: notify
  image: python:3.12-slim
  needs:
    - update-latest-image
  before_script:
    - pip install requests
    - python notify.py --help
  script:
    - python notify.py --service=FRONTEND --artifact=$NEXUS_REPO --version=$VERSION

